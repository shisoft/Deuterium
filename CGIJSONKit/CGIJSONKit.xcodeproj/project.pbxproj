// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		1D028962174C916800C76CEB /* BSDL.md in Resources */ = {isa = PBXBuildFile; fileRef = 1D028961174C916800C76CEB /* BSDL.md */; };
		1D02B61E174BB23B00158DF5 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D02B61D174BB23B00158DF5 /* Cocoa.framework */; };
		1D02B628174BB23B00158DF5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B626174BB23B00158DF5 /* InfoPlist.strings */; };
		1D02B648174BB4CD00158DF5 /* CGIPersistantObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B646174BB4CD00158DF5 /* CGIPersistantObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D02B649174BB4CD00158DF5 /* CGIPersistantObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B647174BB4CD00158DF5 /* CGIPersistantObject.m */; };
		1D02B665174BBB9000158DF5 /* CGIJSONObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B664174BBB8400158DF5 /* CGIJSONObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D02B675174BCFCD00158DF5 /* GNUmakefile in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B672174BCFCD00158DF5 /* GNUmakefile */; };
		1D02B676174BCFCD00158DF5 /* GNUmakefile.postamble in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B673174BCFCD00158DF5 /* GNUmakefile.postamble */; };
		1D02B677174BCFCD00158DF5 /* GNUmakefile.preamble in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B674174BCFCD00158DF5 /* GNUmakefile.preamble */; };
		1D02B67E174BD1E300158DF5 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D02B61D174BB23B00158DF5 /* Cocoa.framework */; };
		1D02B684174BD1E300158DF5 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B682174BD1E300158DF5 /* InfoPlist.strings */; };
		1D02B68C174BD22800158DF5 /* CGIJSONObject.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D02B61A174BB23B00158DF5 /* CGIJSONObject.framework */; };
		1D02B68F174BD23B00158DF5 /* CGIRemoteObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B68D174BD23B00158DF5 /* CGIRemoteObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D02B690174BD23B00158DF5 /* CGIRemoteObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B68E174BD23B00158DF5 /* CGIRemoteObject.m */; };
		1D02B693174BD2EE00158DF5 /* CGIRemoteConnection.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B691174BD2EE00158DF5 /* CGIRemoteConnection.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D02B694174BD2EE00158DF5 /* CGIRemoteConnection.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B692174BD2EE00158DF5 /* CGIRemoteConnection.m */; };
		1D02B695174BD2F700158DF5 /* CGIJSONRemoteObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B686174BD1E300158DF5 /* CGIJSONRemoteObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1D02B699174BD87D00158DF5 /* CGICommon.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B66C174BBF9B00158DF5 /* CGICommon.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D07174BF21000AE1D98 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D02B638174BB28100158DF5 /* Foundation.framework */; };
		1DED1D12174BF26000AE1D98 /* CGIPersistantObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B647174BB4CD00158DF5 /* CGIPersistantObject.m */; };
		1DED1D13174BF26900AE1D98 /* CGIJSONObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B664174BBB8400158DF5 /* CGIJSONObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D14174BF26900AE1D98 /* CGICommon.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B66C174BBF9B00158DF5 /* CGICommon.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D15174BF26900AE1D98 /* CGIPersistantObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B646174BB4CD00158DF5 /* CGIPersistantObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D1F174BF2BE00AE1D98 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1D02B638174BB28100158DF5 /* Foundation.framework */; };
		1DED1D2A174BF2D200AE1D98 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B626174BB23B00158DF5 /* InfoPlist.strings */; };
		1DED1D2B174BF2DB00AE1D98 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 1D02B682174BD1E300158DF5 /* InfoPlist.strings */; };
		1DED1D2C174BF2E100AE1D98 /* CGIRemoteObject.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B68E174BD23B00158DF5 /* CGIRemoteObject.m */; };
		1DED1D2D174BF2E300AE1D98 /* CGIRemoteConnection.m in Sources */ = {isa = PBXBuildFile; fileRef = 1D02B692174BD2EE00158DF5 /* CGIRemoteConnection.m */; };
		1DED1D2E174BF2EE00AE1D98 /* CGIJSONObject.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DED1D06174BF21000AE1D98 /* CGIJSONObject.framework */; };
		1DED1D2F174BF2F900AE1D98 /* CGIJSONRemoteObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B686174BD1E300158DF5 /* CGIJSONRemoteObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D30174BF2FB00AE1D98 /* CGIRemoteObject.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B68D174BD23B00158DF5 /* CGIRemoteObject.h */; settings = {ATTRIBUTES = (Public, ); }; };
		1DED1D31174BF2FD00AE1D98 /* CGIRemoteConnection.h in Headers */ = {isa = PBXBuildFile; fileRef = 1D02B691174BD2EE00158DF5 /* CGIRemoteConnection.h */; settings = {ATTRIBUTES = (Public, ); }; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		1D028961174C916800C76CEB /* BSDL.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = BSDL.md; sourceTree = "<group>"; };
		1D02B61A174BB23B00158DF5 /* CGIJSONObject.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CGIJSONObject.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D02B61D174BB23B00158DF5 /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = System/Library/Frameworks/Cocoa.framework; sourceTree = SDKROOT; };
		1D02B620174BB23B00158DF5 /* AppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AppKit.framework; path = System/Library/Frameworks/AppKit.framework; sourceTree = SDKROOT; };
		1D02B621174BB23B00158DF5 /* CoreData.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreData.framework; path = System/Library/Frameworks/CoreData.framework; sourceTree = SDKROOT; };
		1D02B622174BB23B00158DF5 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		1D02B625174BB23B00158DF5 /* CGIJSONObject-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "CGIJSONObject-Info.plist"; sourceTree = "<group>"; };
		1D02B627174BB23B00158DF5 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D02B638174BB28100158DF5 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		1D02B646174BB4CD00158DF5 /* CGIPersistantObject.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CGIPersistantObject.h; sourceTree = "<group>"; };
		1D02B647174BB4CD00158DF5 /* CGIPersistantObject.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CGIPersistantObject.m; sourceTree = "<group>"; };
		1D02B653174BBB0400158DF5 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		1D02B664174BBB8400158DF5 /* CGIJSONObject.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CGIJSONObject.h; sourceTree = "<group>"; };
		1D02B66C174BBF9B00158DF5 /* CGICommon.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CGICommon.h; sourceTree = "<group>"; };
		1D02B672174BCFCD00158DF5 /* GNUmakefile */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = GNUmakefile; sourceTree = "<group>"; };
		1D02B673174BCFCD00158DF5 /* GNUmakefile.postamble */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = GNUmakefile.postamble; sourceTree = "<group>"; };
		1D02B674174BCFCD00158DF5 /* GNUmakefile.preamble */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = GNUmakefile.preamble; sourceTree = "<group>"; };
		1D02B67D174BD1E300158DF5 /* CGIJSONRemoteObject.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CGIJSONRemoteObject.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1D02B681174BD1E300158DF5 /* CGIJSONRemoteObject-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "CGIJSONRemoteObject-Info.plist"; sourceTree = "<group>"; };
		1D02B683174BD1E300158DF5 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1D02B686174BD1E300158DF5 /* CGIJSONRemoteObject.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CGIJSONRemoteObject.h; sourceTree = "<group>"; };
		1D02B68D174BD23B00158DF5 /* CGIRemoteObject.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CGIRemoteObject.h; sourceTree = "<group>"; };
		1D02B68E174BD23B00158DF5 /* CGIRemoteObject.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CGIRemoteObject.m; sourceTree = "<group>"; };
		1D02B691174BD2EE00158DF5 /* CGIRemoteConnection.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CGIRemoteConnection.h; sourceTree = "<group>"; };
		1D02B692174BD2EE00158DF5 /* CGIRemoteConnection.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CGIRemoteConnection.m; sourceTree = "<group>"; };
		1DED1D06174BF21000AE1D98 /* CGIJSONObject.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = CGIJSONObject.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		1DED1D1E174BF2BE00AE1D98 /* CGIJSONRemoteObject.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = CGIJSONRemoteObject.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		1D02B616174BB23B00158DF5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B61E174BB23B00158DF5 /* Cocoa.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D02B679174BD1E300158DF5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B68C174BD22800158DF5 /* CGIJSONObject.framework in Frameworks */,
				1D02B67E174BD1E300158DF5 /* Cocoa.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D00174BF21000AE1D98 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D07174BF21000AE1D98 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D18174BF2BE00AE1D98 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D2E174BF2EE00AE1D98 /* CGIJSONObject.framework in Frameworks */,
				1DED1D1F174BF2BE00AE1D98 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1D02B5F5174BAB9900158DF5 = {
			isa = PBXGroup;
			children = (
				1D028961174C916800C76CEB /* BSDL.md */,
				1D02B623174BB23B00158DF5 /* CGIJSONObject */,
				1D02B67F174BD1E300158DF5 /* CGIJSONRemoteObject */,
				1D02B61C174BB23B00158DF5 /* Frameworks */,
				1D02B61B174BB23B00158DF5 /* Products */,
			);
			sourceTree = "<group>";
		};
		1D02B61B174BB23B00158DF5 /* Products */ = {
			isa = PBXGroup;
			children = (
				1D02B61A174BB23B00158DF5 /* CGIJSONObject.framework */,
				1D02B67D174BD1E300158DF5 /* CGIJSONRemoteObject.framework */,
				1DED1D06174BF21000AE1D98 /* CGIJSONObject.framework */,
				1DED1D1E174BF2BE00AE1D98 /* CGIJSONRemoteObject.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		1D02B61C174BB23B00158DF5 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				1D02B61D174BB23B00158DF5 /* Cocoa.framework */,
				1D02B638174BB28100158DF5 /* Foundation.framework */,
				1D02B653174BBB0400158DF5 /* SenTestingKit.framework */,
				1D02B61F174BB23B00158DF5 /* Other Frameworks */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		1D02B61F174BB23B00158DF5 /* Other Frameworks */ = {
			isa = PBXGroup;
			children = (
				1D02B620174BB23B00158DF5 /* AppKit.framework */,
				1D02B621174BB23B00158DF5 /* CoreData.framework */,
				1D02B622174BB23B00158DF5 /* Foundation.framework */,
			);
			name = "Other Frameworks";
			sourceTree = "<group>";
		};
		1D02B623174BB23B00158DF5 /* CGIJSONObject */ = {
			isa = PBXGroup;
			children = (
				1D02B664174BBB8400158DF5 /* CGIJSONObject.h */,
				1D02B66C174BBF9B00158DF5 /* CGICommon.h */,
				1D02B646174BB4CD00158DF5 /* CGIPersistantObject.h */,
				1D02B647174BB4CD00158DF5 /* CGIPersistantObject.m */,
				1D02B671174BCF8200158DF5 /* Linux */,
				1D02B624174BB23B00158DF5 /* Supporting Files */,
			);
			path = CGIJSONObject;
			sourceTree = "<group>";
		};
		1D02B624174BB23B00158DF5 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D02B625174BB23B00158DF5 /* CGIJSONObject-Info.plist */,
				1D02B626174BB23B00158DF5 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1D02B671174BCF8200158DF5 /* Linux */ = {
			isa = PBXGroup;
			children = (
				1D02B672174BCFCD00158DF5 /* GNUmakefile */,
				1D02B673174BCFCD00158DF5 /* GNUmakefile.postamble */,
				1D02B674174BCFCD00158DF5 /* GNUmakefile.preamble */,
			);
			name = Linux;
			sourceTree = "<group>";
		};
		1D02B67F174BD1E300158DF5 /* CGIJSONRemoteObject */ = {
			isa = PBXGroup;
			children = (
				1D02B686174BD1E300158DF5 /* CGIJSONRemoteObject.h */,
				1D02B68D174BD23B00158DF5 /* CGIRemoteObject.h */,
				1D02B68E174BD23B00158DF5 /* CGIRemoteObject.m */,
				1D02B691174BD2EE00158DF5 /* CGIRemoteConnection.h */,
				1D02B692174BD2EE00158DF5 /* CGIRemoteConnection.m */,
				1D02B680174BD1E300158DF5 /* Supporting Files */,
			);
			path = CGIJSONRemoteObject;
			sourceTree = "<group>";
		};
		1D02B680174BD1E300158DF5 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1D02B681174BD1E300158DF5 /* CGIJSONRemoteObject-Info.plist */,
				1D02B682174BD1E300158DF5 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		1D02B617174BB23B00158DF5 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B648174BB4CD00158DF5 /* CGIPersistantObject.h in Headers */,
				1D02B665174BBB9000158DF5 /* CGIJSONObject.h in Headers */,
				1D02B699174BD87D00158DF5 /* CGICommon.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D02B67A174BD1E300158DF5 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B68F174BD23B00158DF5 /* CGIRemoteObject.h in Headers */,
				1D02B693174BD2EE00158DF5 /* CGIRemoteConnection.h in Headers */,
				1D02B695174BD2F700158DF5 /* CGIJSONRemoteObject.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D01174BF21000AE1D98 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D13174BF26900AE1D98 /* CGIJSONObject.h in Headers */,
				1DED1D14174BF26900AE1D98 /* CGICommon.h in Headers */,
				1DED1D15174BF26900AE1D98 /* CGIPersistantObject.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D19174BF2BE00AE1D98 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D2F174BF2F900AE1D98 /* CGIJSONRemoteObject.h in Headers */,
				1DED1D30174BF2FB00AE1D98 /* CGIRemoteObject.h in Headers */,
				1DED1D31174BF2FD00AE1D98 /* CGIRemoteConnection.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		1D02B619174BB23B00158DF5 /* CGIJSONObject */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D02B62D174BB23B00158DF5 /* Build configuration list for PBXNativeTarget "CGIJSONObject" */;
			buildPhases = (
				1D02B615174BB23B00158DF5 /* Sources */,
				1D02B616174BB23B00158DF5 /* Frameworks */,
				1D02B617174BB23B00158DF5 /* Headers */,
				1D02B618174BB23B00158DF5 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CGIJSONObject;
			productName = CGIJSONObject;
			productReference = 1D02B61A174BB23B00158DF5 /* CGIJSONObject.framework */;
			productType = "com.apple.product-type.framework";
		};
		1D02B67C174BD1E300158DF5 /* CGIJSONRemoteObject */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1D02B689174BD1E300158DF5 /* Build configuration list for PBXNativeTarget "CGIJSONRemoteObject" */;
			buildPhases = (
				1D02B678174BD1E300158DF5 /* Sources */,
				1D02B679174BD1E300158DF5 /* Frameworks */,
				1D02B67A174BD1E300158DF5 /* Headers */,
				1D02B67B174BD1E300158DF5 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CGIJSONRemoteObject;
			productName = CGIJSONRemoteObject;
			productReference = 1D02B67D174BD1E300158DF5 /* CGIJSONRemoteObject.framework */;
			productType = "com.apple.product-type.framework";
		};
		1DED1D05174BF21000AE1D98 /* MobileJSONObject */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1DED1D0F174BF21000AE1D98 /* Build configuration list for PBXNativeTarget "MobileJSONObject" */;
			buildPhases = (
				1DED1CFE174BF21000AE1D98 /* ShellScript */,
				1DED1CFF174BF21000AE1D98 /* Sources */,
				1DED1D00174BF21000AE1D98 /* Frameworks */,
				1DED1D01174BF21000AE1D98 /* Headers */,
				1DED1D02174BF21000AE1D98 /* Resources */,
				1DED1D03174BF21000AE1D98 /* ShellScript */,
				1DED1D04174BF21000AE1D98 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileJSONObject;
			productName = MobileJSONObject;
			productReference = 1DED1D06174BF21000AE1D98 /* CGIJSONObject.framework */;
			productType = "com.apple.product-type.framework.static";
		};
		1DED1D1D174BF2BE00AE1D98 /* MobileJSONRemoteObject */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1DED1D27174BF2BE00AE1D98 /* Build configuration list for PBXNativeTarget "MobileJSONRemoteObject" */;
			buildPhases = (
				1DED1D16174BF2BE00AE1D98 /* ShellScript */,
				1DED1D17174BF2BE00AE1D98 /* Sources */,
				1DED1D18174BF2BE00AE1D98 /* Frameworks */,
				1DED1D19174BF2BE00AE1D98 /* Headers */,
				1DED1D1A174BF2BE00AE1D98 /* Resources */,
				1DED1D1B174BF2BE00AE1D98 /* ShellScript */,
				1DED1D1C174BF2BE00AE1D98 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MobileJSONRemoteObject;
			productName = MobileJSONRemoteObject;
			productReference = 1DED1D1E174BF2BE00AE1D98 /* CGIJSONRemoteObject.framework */;
			productType = "com.apple.product-type.framework.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1D02B5F6174BAB9900158DF5 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				CLASSPREFIX = CGI;
				LastUpgradeCheck = 0460;
				ORGANIZATIONNAME = muski;
			};
			buildConfigurationList = 1D02B5F9174BAB9900158DF5 /* Build configuration list for PBXProject "CGIJSONKit" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 1D02B5F5174BAB9900158DF5;
			productRefGroup = 1D02B61B174BB23B00158DF5 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				1D02B619174BB23B00158DF5 /* CGIJSONObject */,
				1D02B67C174BD1E300158DF5 /* CGIJSONRemoteObject */,
				1DED1D05174BF21000AE1D98 /* MobileJSONObject */,
				1DED1D1D174BF2BE00AE1D98 /* MobileJSONRemoteObject */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		1D02B618174BB23B00158DF5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B628174BB23B00158DF5 /* InfoPlist.strings in Resources */,
				1D02B675174BCFCD00158DF5 /* GNUmakefile in Resources */,
				1D02B676174BCFCD00158DF5 /* GNUmakefile.postamble in Resources */,
				1D02B677174BCFCD00158DF5 /* GNUmakefile.preamble in Resources */,
				1D028962174C916800C76CEB /* BSDL.md in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D02B67B174BD1E300158DF5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B684174BD1E300158DF5 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D02174BF21000AE1D98 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D2A174BF2D200AE1D98 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D1A174BF2BE00AE1D98 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D2B174BF2DB00AE1D98 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		1DED1CFE174BF21000AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1DED1D03174BF21000AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1DED1D04174BF21000AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
		1DED1D16174BF2BE00AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		1DED1D1B174BF2BE00AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		1DED1D1C174BF2BE00AE1D98 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		1D02B615174BB23B00158DF5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B649174BB4CD00158DF5 /* CGIPersistantObject.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1D02B678174BD1E300158DF5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D02B690174BD23B00158DF5 /* CGIRemoteObject.m in Sources */,
				1D02B694174BD2EE00158DF5 /* CGIRemoteConnection.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1CFF174BF21000AE1D98 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D12174BF26000AE1D98 /* CGIPersistantObject.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1DED1D17174BF2BE00AE1D98 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DED1D2C174BF2E100AE1D98 /* CGIRemoteObject.m in Sources */,
				1DED1D2D174BF2E300AE1D98 /* CGIRemoteConnection.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		1D02B626174BB23B00158DF5 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D02B627174BB23B00158DF5 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1D02B682174BD1E300158DF5 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				1D02B683174BD1E300158DF5 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		1D02B5FA174BAB9900158DF5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		1D02B5FB174BAB9900158DF5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		1D02B62E174BB23B00158DF5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONObject/CGIJSONObject-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D02B62F174BB23B00158DF5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONObject/CGIJSONObject-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1D02B68A174BD1E300158DF5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONRemoteObject/CGIJSONRemoteObject-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1D02B68B174BD1E300158DF5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_ENABLE_OBJC_EXCEPTIONS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONRemoteObject/CGIJSONRemoteObject-Info.plist";
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1DED1D10174BF21000AE1D98 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONObject/CGIJSONObject-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = CGIJSONObject;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1DED1D11174BF21000AE1D98 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONObject/CGIJSONObject-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				PRODUCT_NAME = CGIJSONObject;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		1DED1D28174BF2BE00AE1D98 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONRemoteObject/CGIJSONRemoteObject-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = CGIJSONRemoteObject;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		1DED1D29174BF2BE00AE1D98 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = B;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_FILE = "CGIJSONRemoteObject/CGIJSONRemoteObject-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				PRODUCT_NAME = CGIJSONRemoteObject;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		1D02B5F9174BAB9900158DF5 /* Build configuration list for PBXProject "CGIJSONKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D02B5FA174BAB9900158DF5 /* Debug */,
				1D02B5FB174BAB9900158DF5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D02B62D174BB23B00158DF5 /* Build configuration list for PBXNativeTarget "CGIJSONObject" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D02B62E174BB23B00158DF5 /* Debug */,
				1D02B62F174BB23B00158DF5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1D02B689174BD1E300158DF5 /* Build configuration list for PBXNativeTarget "CGIJSONRemoteObject" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1D02B68A174BD1E300158DF5 /* Debug */,
				1D02B68B174BD1E300158DF5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1DED1D0F174BF21000AE1D98 /* Build configuration list for PBXNativeTarget "MobileJSONObject" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1DED1D10174BF21000AE1D98 /* Debug */,
				1DED1D11174BF21000AE1D98 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1DED1D27174BF2BE00AE1D98 /* Build configuration list for PBXNativeTarget "MobileJSONRemoteObject" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1DED1D28174BF2BE00AE1D98 /* Debug */,
				1DED1D29174BF2BE00AE1D98 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1D02B5F6174BAB9900158DF5 /* Project object */;
}
